Comme l'essentiel des outils de sciences de données sont basés sur des langages de programmation dynamiques et souvent faiblement typés, nous rencontrons les problèmes qu'ils génèrent. Le premier problème vient de la maintenance. De par leur nature dynamique. Ces langages ont tendance à faire des "arrangements" en arrière plan et ne permettent pas d'assurer une lecture fidèle à l'exécution du code. Cela rend difficile la création de librairies, modules ou packages. C'est pourquoi cette tâche est laissée à des langages plus performants et mieux typés comme C++ pour créer des librairies. Le problème de ces derniers est qu'on ne trouve pas vraiment de système de type pour la gestion de tableaux multidimensionnels, ce qui est l'un des points les plus essentiels des sciences de données. 

L'équipe de Andres Löh et al #cite(label("Loh2010-aw")) ont pu developper une implémentation d'un langage combinés à des types dépendants (le langage Haskell a été utilisé dans le cadre de ce projet). Ceci a permis le typage et la vérification correcte de quelques concepts du domaines des tableaux multidimensionnels et de leur lien avec l'algèbre linéaire. Le soucis de ces langages vient du fait qu'ils sont trop "abstraits" et difficilement abordables pour l'ingénieur moyen. 

Il n'y a donc pas de moyen raisonnablement accessible qui améliore la productivité lors de la construction de librairies pour les sciences de données. C'est là le but de ce projet. 

